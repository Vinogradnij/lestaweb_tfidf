"""Create Statistic and DocumentCollection tables

Revision ID: ebceab1af273
Revises: 36cf00eb4d3d
Create Date: 2025-06-15 20:34:09.973260

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ebceab1af273'
down_revision: Union[str, None] = '36cf00eb4d3d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('collection_document',
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('collection_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['collection_id'], ['collection.id'], name=op.f('fk_collection_document_collection_id_collection')),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], name=op.f('fk_collection_document_document_id_document')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_collection_document'))
    )
    op.create_table('statistic',
    sa.Column('word', sa.String(), nullable=False),
    sa.Column('tf', sa.Float(), nullable=False),
    sa.Column('idf', sa.Float(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('collection_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['collection_id'], ['collection.id'], name=op.f('fk_statistic_collection_id_collection')),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], name=op.f('fk_statistic_document_id_document')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_statistic'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('statistic')
    op.drop_table('collection_document')
    # ### end Alembic commands ###
