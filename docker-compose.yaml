services:
  backend:
    image: vinogradnij/tfidf_app:1.5.1
    container_name: backend_tfidf
    ports:
      - "${TFIDF__RUN__PORT}:${TFIDF__RUN__PORT}"
    entrypoint: ["./src/prestart.sh"]
    command: ["python", "src/main.py"]
    environment:
      - TFIDF__DB__HOST=${TFIDF__DB__HOST}
      - TFIDF__DB__PORT=${TFIDF__DB__PORT}
      - TFIDF__DB__USER=${TFIDF__DB__USER}
      - TFIDF__DB__PASSWORD=${TFIDF__DB__PASSWORD}
      - TFIDF__DB__NAME=${TFIDF__DB__NAME}

      - TFIDF__RUN__HOST=${TFIDF__RUN__HOST}
      - TFIDF__RUN__PORT=${TFIDF__RUN__PORT}

      - TFIDF__SECURITY__SECRET_KEY=${TFIDF__SECURITY__SECRET_KEY}
      - TFIDF__SECURITY__ALGORITHM=${TFIDF__SECURITY__ALGORITHM}
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./src/files:/app/src/files

  database:
    image: postgres:17.5-alpine3.21
    container_name: postgres_tfidf
    environment:
      POSTGRES_DB: ${TFIDF__DB__NAME}
      POSTGRES_USER: ${TFIDF__DB__USER}
      POSTGRES_PASSWORD: ${TFIDF__DB__PASSWORD}
      PGDATA: /var/lib/postgresql/data
      PGUSER: ${TFIDF__DB__USER}
    ports:
      - '${TFIDF__DB__PORT}:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready' ]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  pgdata:
    driver: local
